name: Deploy to production
on:
  push:
    tags:
     - v*

defaults:
  run:
    working-directory: app

jobs:
  deploy:
    name: Build and deploy to production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          npm ci
      - name: Get version string from git tag name
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Print version string
        run: echo ${{ steps.get_version.outputs.VERSION }}
      - name: Build app with production environment variables
        env:
          NODE_ENV: production
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          PORT: 12345
          STREAMR_API_URL: https://streamr.network/api/v1
          STREAMR_WS_URL: wss://streamr.network/api/v1/ws
          PLATFORM_ORIGIN_URL: https://streamr.network
          PLATFORM_PUBLIC_PATH: https://cdn.streamr.com1
          STREAMR_URL: https://streamr.network
          GOOGLE_ANALYTICS_ID: UA-55331565-5
          SENTRY_ENVIRONMENT: production
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_API_TOKEN }}
          SENTRY_ORG: streamr
          SENTRY_PROJECT: marketplace
          SENTRY_DSN: https://e012761929d24baa96ca82772f60b395@o151964.ingest.sentry.io/1203154
          SENTRY_INDEXER_DSN: https://8311f8e7df9046b781600f95eefd1aa0@o151964.ingest.sentry.io/5235991
          NO_TEST_HOOKS: 1
          STORAGE_NODES: "Streamr Germany:0x31546eEA76F2B2b3C5cC06B1c93601dc35c9D916"
          WEB3_PUBLIC_HTTP_PROVIDER: ${{ secrets.MAINNET_RPC_URL }}
          WEB3_PUBLIC_WS_PROVIDER: wss://mainnet.infura.io/ws/v3/17c3985baecb4c4d94a1edc2c4d23206 # TODO: remove, this is unused in code
          DATA_UNION_SIDECHAIN_PROVIDER: ${{ secrets.XDAI_RPC_URL }}
          DATAUNION_VERSION: 2
          DATA_UNION_PUBLISH_MEMBER_LIMIT: 1
          WEB3_TRANSACTION_CONFIRMATION_BLOCKS: 1
        run: npm run build --if-present
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Deploy to S3
        run: |
          aws s3 sync dist/. s3://eu-west-1-streamr-cdn --acl private
      - name: Invalidate Cloudfront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"
      - name: Save to vault
        run: |
          aws s3 sync dist/. s3://eu-west-1-streamr-vault/marketplace/releases/latest --acl private
          aws s3 sync dist/. s3://eu-west-1-streamr-vault/marketplace/releases/${{ steps.get_version.outputs.VERSION }} --acl private
